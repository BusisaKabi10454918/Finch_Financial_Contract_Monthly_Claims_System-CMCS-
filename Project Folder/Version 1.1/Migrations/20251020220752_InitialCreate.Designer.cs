// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROG_PART2.Data;

#nullable disable

namespace PROG_PART2.Migrations
{
    [DbContext(typeof(FinchSystemDbContext))]
    [Migration("20251020220752_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("PROG_PART2.Models.AcademicManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ManagerId");

                    b.ToTable("AcademicManagers");
                });

            modelBuilder.Entity("PROG_PART2.Models.Claim", b =>
                {
                    b.Property<string>("ClaimID")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ClaimPeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ClaimPeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimantLecturerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClaimedHours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimedModuleModuleCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("SuppDocs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClaimID");

                    b.HasIndex("ClaimantLecturerID");

                    b.HasIndex("ClaimedModuleModuleCode");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("PROG_PART2.Models.IndependentLecturer", b =>
                {
                    b.Property<string>("LecturerID")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("LecturerID");

                    b.ToTable("IndependentLecturers");
                });

            modelBuilder.Entity("PROG_PART2.Models.Module", b =>
                {
                    b.Property<string>("ModuleCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("LecturerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LecturerRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("ModuleCode");

                    b.HasIndex("LecturerID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("PROG_PART2.Models.ProgrammeCoordinator", b =>
                {
                    b.Property<string>("CoordinatorId")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CoordinatorId");

                    b.ToTable("ProgrammeCoordinators");
                });

            modelBuilder.Entity("PROG_PART2.Models.Claim", b =>
                {
                    b.HasOne("PROG_PART2.Models.IndependentLecturer", "Claimant")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimantLecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROG_PART2.Models.Module", "ClaimedModule")
                        .WithMany()
                        .HasForeignKey("ClaimedModuleModuleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claimant");

                    b.Navigation("ClaimedModule");
                });

            modelBuilder.Entity("PROG_PART2.Models.Module", b =>
                {
                    b.HasOne("PROG_PART2.Models.IndependentLecturer", "Lecturer")
                        .WithMany("Modules")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("PROG_PART2.Models.IndependentLecturer", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
