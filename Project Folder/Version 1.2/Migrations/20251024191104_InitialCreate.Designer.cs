// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROG.Data;

#nullable disable

namespace PROG.Migrations
{
    [DbContext(typeof(FinchSystemDbContext))]
    [Migration("20251024191104_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("PROG.Models.Claim", b =>
                {
                    b.Property<Guid>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminComments")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ClaimAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ClaimPeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ClaimPeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimReadID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClaimStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClaimedHours")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LecturerID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupportingDocuments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClaimID");

                    b.HasIndex("LecturerID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("PROG.Models.Coordinator", b =>
                {
                    b.Property<Guid>("CoordinatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CoordinatorID");

                    b.ToTable("ProgrammeCoordinators");
                });

            modelBuilder.Entity("PROG.Models.Lecturer", b =>
                {
                    b.Property<Guid>("LecturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfClaims")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("LecturerID");

                    b.ToTable("IndependentLecturers");
                });

            modelBuilder.Entity("PROG.Models.Manager", b =>
                {
                    b.Property<Guid>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ManagerID");

                    b.ToTable("AcademicManagers");
                });

            modelBuilder.Entity("PROG.Models.Claim", b =>
                {
                    b.HasOne("PROG.Models.Lecturer", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });
#pragma warning restore 612, 618
        }
    }
}
